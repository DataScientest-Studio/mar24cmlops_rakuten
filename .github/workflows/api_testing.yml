name: Run Tests

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10.11' 

    - name: Update system packages and install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y \
          curl \
          git \
          build-essential \
          expect \
          && sudo apt-get clean \
          && sudo rm -rf /var/lib/apt/lists/*

    - name: Download Rye installation script
      run: |
        curl -sSL https://rye-up.com/get -o get-rye.sh
        chmod +x get-rye.sh

    - name: Create Expect script for Rye installation
      run: |
        echo '#!/usr/bin/expect -f
        set timeout -1
        spawn ./get-rye.sh
        expect "? Continue? (y/n)" { send "y\r" }
        expect "Select the preferred package installer" { send "\r" }
        expect "What should running `python` or `python3` do when you are not inside a Rye managed project?" { send "\r" }
        expect "Which version of Python should be used as default toolchain? (cpython@3.12)" { send "3.10.11\r" }
        expect "Should the installer add Rye to PATH via .profile?" { send "y\r" }
        expect eof' > install-rye.expect
        chmod +x install-rye.expect

    - name: Run Expect script to install Rye
      run: ./install-rye.expect

    - name: Create rye-env.sh script
      run: |
        echo '#!/bin/bash
        source "$HOME/.rye/env"
        exec "$@"' > rye-env.sh
        chmod +x rye-env.sh

    - name: Install project dependencies
      run: ./rye-env.sh rye sync

    - name: Run tests
      run: ./rye-env.sh rye run pytest
      env:
        PORT: ${{ secrets.PORT }}
        AWS_CONFIG_PATH: ${{ secrets.AWS_CONFIG_PATH }}
        AWS_CONFIG_FOLDER: ${{ secrets.AWS_CONFIG_FOLDER }}
        DATA_PATH: ${{ secrets.DATA_PATH }}
        S3_INIT_DB_PATH: ${{ secrets.S3_INIT_DB_PATH }}
        RAKUTEN_DB_NAME: ${{ secrets.RAKUTEN_DB_NAME }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        KEY: ${{ secrets.KEY }}
        JWT_KEY: ${{ secrets.JWT_KEY }}
        ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
        ALGORITHM: ${{ secrets.ALGORITHM }}